
package org.tempuri;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.datacontract.schemas._2004._07.endava_edp_invoicebook_web.DocumentPermissionsResponse;
import org.datacontract.schemas._2004._07.endava_edp_invoicebook_web.InvoiceBookFormat;
import org.datacontract.schemas._2004._07.endava_edp_invoicebook_web.InvoiceBookStatusResponse;
import org.datacontract.schemas._2004._07.endava_edp_invoicebook_web.OpenPeriodsResponse;
import org.datacontract.schemas._2004._07.endava_edp_invoicebook_web.Period;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ISoapService", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    com.microsoft.schemas._2003._10.serialization.ObjectFactory.class,
    org.datacontract.schemas._2004._07.endava_edp_invoicebook_web.ObjectFactory.class,
    org.tempuri.ObjectFactory.class
})
public interface ISoapService {


    /**
     * 
     * @param period
     * @param schemaVersion
     * @param format
     * @param correlationId
     * @param parameters
     * @return
     *     returns org.tempuri.UploadInvoiceBookResponse
     * @throws ISoapServiceUploadInvoiceBookUnauthorizedFaultFaultFaultMessage
     * @throws ISoapServiceUploadInvoiceBookBadRequestFaultFaultFaultMessage
     * @throws ISoapServiceUploadInvoiceBookServerErrorFaultFaultFaultMessage
     */
    @WebMethod(operationName = "UploadInvoiceBook", action = "http://tempuri.org/ISoapService/UploadInvoiceBook")
    @WebResult(name = "UploadInvoiceBookResponse", targetNamespace = "http://tempuri.org/", partName = "parameters")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public UploadInvoiceBookResponse uploadInvoiceBook(
        @WebParam(name = "UploadInvoiceBookRequest", targetNamespace = "http://tempuri.org/", partName = "parameters")
        UploadInvoiceBookRequest parameters,
        @WebParam(name = "CorrelationId", targetNamespace = "http://tempuri.org/", header = true, partName = "CorrelationId")
        String correlationId,
        @WebParam(name = "Format", targetNamespace = "http://tempuri.org/", header = true, partName = "Format")
        InvoiceBookFormat format,
        @WebParam(name = "Period", targetNamespace = "http://tempuri.org/", header = true, partName = "Period")
        Period period,
        @WebParam(name = "SchemaVersion", targetNamespace = "http://tempuri.org/", header = true, partName = "SchemaVersion")
        int schemaVersion)
        throws ISoapServiceUploadInvoiceBookBadRequestFaultFaultFaultMessage, ISoapServiceUploadInvoiceBookServerErrorFaultFaultFaultMessage, ISoapServiceUploadInvoiceBookUnauthorizedFaultFaultFaultMessage
    ;

    /**
     * 
     * @param edpId
     * @return
     *     returns org.datacontract.schemas._2004._07.endava_edp_invoicebook_web.InvoiceBookStatusResponse
     * @throws ISoapServiceGetInvoiceBookStatusNotFoundFaultFaultFaultMessage
     * @throws ISoapServiceGetInvoiceBookStatusUnauthorizedFaultFaultFaultMessage
     * @throws ISoapServiceGetInvoiceBookStatusServerErrorFaultFaultFaultMessage
     * @throws ISoapServiceGetInvoiceBookStatusBadRequestFaultFaultFaultMessage
     * @throws ISoapServiceGetInvoiceBookStatusForbiddenFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetInvoiceBookStatus", action = "http://tempuri.org/ISoapService/GetInvoiceBookStatus")
    @WebResult(name = "GetInvoiceBookStatusResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetInvoiceBookStatus", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetInvoiceBookStatus")
    @ResponseWrapper(localName = "GetInvoiceBookStatusResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetInvoiceBookStatusResponse")
    public InvoiceBookStatusResponse getInvoiceBookStatus(
        @WebParam(name = "edpId", targetNamespace = "http://tempuri.org/")
        String edpId)
        throws ISoapServiceGetInvoiceBookStatusBadRequestFaultFaultFaultMessage, ISoapServiceGetInvoiceBookStatusForbiddenFaultFaultFaultMessage, ISoapServiceGetInvoiceBookStatusNotFoundFaultFaultFaultMessage, ISoapServiceGetInvoiceBookStatusServerErrorFaultFaultFaultMessage, ISoapServiceGetInvoiceBookStatusUnauthorizedFaultFaultFaultMessage
    ;

    /**
     * 
     * @param formCode
     * @return
     *     returns org.datacontract.schemas._2004._07.endava_edp_invoicebook_web.OpenPeriodsResponse
     * @throws ISoapServiceGetOpenPeriodsUnauthorizedFaultFaultFaultMessage
     * @throws ISoapServiceGetOpenPeriodsServerErrorFaultFaultFaultMessage
     * @throws ISoapServiceGetOpenPeriodsBadRequestFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetOpenPeriods", action = "http://tempuri.org/ISoapService/GetOpenPeriods")
    @WebResult(name = "GetOpenPeriodsResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetOpenPeriods", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetOpenPeriods")
    @ResponseWrapper(localName = "GetOpenPeriodsResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetOpenPeriodsResponse")
    public OpenPeriodsResponse getOpenPeriods(
        @WebParam(name = "formCode", targetNamespace = "http://tempuri.org/")
        String formCode)
        throws ISoapServiceGetOpenPeriodsBadRequestFaultFaultFaultMessage, ISoapServiceGetOpenPeriodsServerErrorFaultFaultFaultMessage, ISoapServiceGetOpenPeriodsUnauthorizedFaultFaultFaultMessage
    ;

    /**
     * 
     * @param formCode
     * @return
     *     returns org.datacontract.schemas._2004._07.endava_edp_invoicebook_web.DocumentPermissionsResponse
     * @throws ISoapServiceGetPermissionsServerErrorFaultFaultFaultMessage
     * @throws ISoapServiceGetPermissionsBadRequestFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetPermissions", action = "http://tempuri.org/ISoapService/GetPermissions")
    @WebResult(name = "GetPermissionsResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetPermissions", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetPermissions")
    @ResponseWrapper(localName = "GetPermissionsResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetPermissionsResponse")
    public DocumentPermissionsResponse getPermissions(
        @WebParam(name = "formCode", targetNamespace = "http://tempuri.org/")
        String formCode)
        throws ISoapServiceGetPermissionsBadRequestFaultFaultFaultMessage, ISoapServiceGetPermissionsServerErrorFaultFaultFaultMessage
    ;

}
